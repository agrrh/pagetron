---

nameOverride: ""
fullnameOverride: ""

targets:
  - https://www.docker.com
  - https://kubernetes.io
  - https://svelte.dev
  - https://fastapi.tiangolo.com
  - https://prometheus.io

publicAccess:
  ingress:
    enabled: true
  s3:
    enabled: true

publicUrl: "https://pagetron.example.org"

# Supported classes:
#   - nginx
#   - traefik
ingressClass: nginx

# May be changed to use external Prometheus
prometheusUrl: "http://prometheus:9090/"

timezone: UTC

#
# User may want to change default availability check rule
#
# Result MUST be in form of:
#   - labels:
#     - "instance" - REQUIRED with target name as value, e.g. "https://example.com"
#     - other labels allowed
#   - value: integer, 1 if considered available, otherwise 0
#
query1m: |-
  sum by (instance) (
    probe_success == bool 1
    and probe_http_status_code >= bool 200
    and probe_http_status_code < bool 300
    and probe_duration_seconds < bool 2
  )

# State any external metrics here
# Use scrape_config format:
#   https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config
customMetricSources: []
  # AWS
  # Cloudwatch Exporter
  # https://github.com/prometheus/cloudwatch_exporter
  #
  # - job_name: aws-cloudwatch-exporter
  #   scheme: http
  #   metrics_path: /metrics
  #   static_configs:
  #     - targets:
  #         - cloudwatch-exporter:9106

  # AWS
  # Yet Another Cloudwatch Exporter
  # https://github.com/nerdswords/yet-another-cloudwatch-exporter
  #
  # - job_name: aws-yace
  #   scheme: http
  #   metrics_path: /metrics
  #   static_configs:
  #     - targets:
  #         - aws-yace:5000

  #
  # Yandex Cloud
  # https://cloud.yandex.com/en-ru/docs/monitoring/operations/metric/prometheusExport
  #
  # - job_name: yc-monitoring-export
  #   metrics_path: /monitoring/v2/prometheusMetrics
  #   scheme: https
  #   params:
  #     folderId:
  #       - my-folder
  #     service:
  #       - application-load-balancer
  #   bearer_token_file: /secrets/yandex-cloud/bearer.key
  #   static_configs:
  #     - targets:
  #         - monitoring.api.cloud.yandex.net
  #       labels:
  #         service: application-load-balancer
  #         folderId: my-folder

# Secret expected to be:
#  - Created separately
#  - Located in same namespace
# These would be mounted to `/secrets` path as separate directories
# Operator may mention those in custom metric sources list
additionalSecrets: []
  # - my-exporter-token
  # - yandex-cloud

backend:
  replicas: 2
  image:
    repository: agrrh/pagetron-backend
    pullPolicy: IfNotPresent
    tag: ""

  resources:
    limits:
      cpu: 500m
      memory: 256Mi
    requests:
      cpu: 50m
      memory: 64Mi

  nodeSelector: {}
  tolerations: []

publisher:
  schedule: "*/5 * * * *"

  s3:
    secretName: s3-publish-credentials
    bucketName: pagetron-status-page

    # Secret example for AWS
    # data:
    #   AWS_ACCESS_KEY_ID: ""
    #   AWS_SECRET_ACCESS_KEY: ""
    #   AWS_DEFAULT_REGION: ""
    #   AWS_ENDPOINT_URL_S3: ""

    # Secret example for Yandex Cloud
    # data:
    #   AWS_ACCESS_KEY_ID: ""
    #   AWS_SECRET_ACCESS_KEY: ""
    #   AWS_DEFAULT_REGION: "ru-central1"
    #   AWS_ENDPOINT_URL_S3: "https://storage.yandexcloud.net/"

  buildImage:
    repository: agrrh/pagetron-frontend-builder
    pullPolicy: IfNotPresent
    tag: ""

  image:
    repository: agrrh/cider
    pullPolicy: IfNotPresent
    tag: 0.7.0

  resources:
    limits:
      cpu: 100m
      memory: 64Mi
    requests:
      cpu: 50m
      memory: 64Mi

  nodeSelector: {}
  tolerations: []

frontend:
  replicas: 2
  image:
    repository: agrrh/pagetron-frontend
    pullPolicy: IfNotPresent
    tag: ""

  resources:
    limits:
      cpu: 100m
      memory: 64Mi
    requests:
      cpu: 50m
      memory: 64Mi

  nodeSelector: {}
  tolerations: []

prometheus:
  replicas: 1
  image:
    repository: prom/prometheus
    pullPolicy: IfNotPresent
    tag: v2.48.0

  resources:
    limits:
      cpu: 500m
      memory: 2Gi
    requests:
      cpu: 50m
      memory: 256Mi

  reloader:
    enabled: true
    image:
      repository: ghcr.io/jimmidyson/configmap-reload
      tag: v0.12.0

  nodeSelector: {}
  tolerations: []

blackbox:
  replicas: 1
  image:
    repository: prom/blackbox-exporter
    pullPolicy: IfNotPresent
    tag: v0.24.0

  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi

  nodeSelector: {}
  tolerations: []

housekeeper:
  schedule: "0 10 * * 5"

  image:
    repository: agrrh/cider
    pullPolicy: IfNotPresent
    tag: 0.7.0

  resources:
    limits:
      cpu: 50m
      memory: 64Mi
    requests:
      cpu: 50m
      memory: 64Mi

  nodeSelector: {}
  tolerations: []
